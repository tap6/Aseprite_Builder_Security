name: Build Aseprite

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Aseprite Version'
        required: true
        default: 'v1.3.13'
        type: string

jobs:
  build:
    name: Build Aseprite (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install dependencies (Linux)
        if: runner.os == 'Linux'
        run: |
          sudo apt update
          sudo apt install -y cmake ninja-build g++ clang libc++-dev libc++abi-dev libx11-dev libxcursor-dev libxi-dev libgl1-mesa-dev libfontconfig1-dev curl git
          sudo ln -sf /usr/bin/clang++ /usr/bin/c++

      - name: Install dependencies (macOS)
        if: runner.os == 'macOS'
        run: |
          brew update
          brew install cmake ninja llvm fontconfig curl git
          brew link --overwrite cmake

      - name: Install dependencies (Windows)
        if: runner.os == 'Windows'
        run: |
          choco install -y cmake ninja git curl

      - name: Get Latest Skia URL (Linux)
        if: runner.os == 'Linux'
        run: |
          SKIA_URL=$(curl -s https://api.github.com/repos/aseprite/skia/releases/latest | \
                     grep "browser_download_url.*Skia-Linux-Release-x64-libc++.zip" | \
                     cut -d '"' -f 4)
          echo "Skia Download URL: $SKIA_URL"
          curl -L -o skia.zip "$SKIA_URL"
          unzip skia.zip -d skia

      - name: Get Latest Skia URL (macOS)
        if: runner.os == 'macOS'
        run: |
          SKIA_URL=$(curl -s https://api.github.com/repos/aseprite/skia/releases/latest | \
                     grep "browser_download_url.*Skia-macOS-Release-x64.zip" | \
                     cut -d '"' -f 4)
          echo "Skia Download URL: $SKIA_URL"
          curl -L -o skia.zip "$SKIA_URL"
          unzip skia.zip -d skia

      - name: Get Latest Skia URL (Windows)
        if: runner.os == 'Windows'
        run: |
          $skia_url = (Invoke-RestMethod -Uri "https://api.github.com/repos/aseprite/skia/releases/latest" | `
                      Select-String -Pattern 'browser_download_url.*Skia-Windows-Release-x64.zip' | `
                      ForEach-Object { $_ -match '"(https://github[^"]+)"'; $matches[1] })
          Write-Output "Skia Download URL: $skia_url"
          Invoke-WebRequest -Uri $skia_url -OutFile skia.zip
          powershell -command "Expand-Archive -Path skia.zip -DestinationPath skia"

      - name: Clone Aseprite
        run: |
          git clone --depth=1 --branch ${{ github.event.inputs.version || 'v1.3.5' }} https://github.com/aseprite/aseprite.git aseprite

      - name: Build Aseprite
        run: |
          cd aseprite
          mkdir build
          cd build
          cmake -G Ninja -DCMAKE_BUILD_TYPE=Release \
                -DLAF_BACKEND=skia \
                -DSKIA_DIR=../../skia \
                -DSKIA_LIBRARY_DIR=../../skia \
                -DSKIA_LIBRARY=../../skia/libskia.a ..
          ninja

      - name: Archive Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: aseprite-${{ matrix.os }}
          path: aseprite/build/bin/aseprite*

      - name: Create Release
        if: github.ref == 'refs/heads/main'
        uses: softprops/action-gh-release@v2
        with:
          files: aseprite/build/bin/aseprite*
          tag_name: aseprite-${{ github.event.inputs.version }}
          name: "Aseprite ${{ github.event.inputs.version }} Release"
          body: "Compiled version of Aseprite ${{ github.event.inputs.version }} for Windows, Linux, and macOS"
